[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "triangle"
description = "Solution of the triangle problem."
readme = "README.md"
requires-python = ">=3.8"
dependencies = ["numpy", "matplotlib", "jupyterlab"]
dynamic = ["version"]

[[project.authors]]
name = "Dimitar Dimitrov"
email = "mail.mitko@gmail.com"


[project.license]
text = "Apache 2.0"

[project.optional-dependencies]
test = ["pytest", "coverage", "pytest-reportlog", "pytest-html", "tox"]
lint = ["pylint", "pylint-report", "pydocstyle"]
docs = [
    "Sphinx",
    "sphinx-rtd-theme",
    "sphinxcontrib-jsmath",
    "sphinxcontrib-websupport",
    "sphinx-copybutton",
    "furo",
]
code = ["black", "isort", "pre-commit"]
dev = ["triangle[test,lint,docs,code]"]

[project.urls]


[tool.black]
line-length = 88
target-version = ['py38']
force-exclude = ".*resources.*"

[tool.coverage.html]
directory = ".htmlcov"

[tool.coverage.run]
branch = true
source = ["triangle"]

[tool.isort]
profile = "black"
skip_glob = ["*/resources/*"]
filter_files = true

[tool.pylint.MASTER]
ignore = ["utest", "resources", "_version.py"]
load-plugins = "pylint_report"

[tool.pylint.REPORTS]
output-format = "pylint_report.CustomJsonReporter"

[tool.pylint.messages_control]
max-line-length = 95  # give black some room
disable = [
    "invalid-name",
    "logging-fstring-interpolation"
]

[tool.pytest.ini_options]
testpaths = ["triangle/utest"]
addopts = [
	"--report-log=.utest_reports/utest.log",
	"--html=.utest_reports/utest_report.html"
]

[tool.setuptools]
packages = [
    "triangle",
]

[tool.setuptools_scm]
write_to = "triangle/_version.py"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True

[testenv]
deps = pytest
commands = pytest
passenv = HOME
"""
